import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

#Define the features to be used
features = ['wtd_entropy_atomic_mass', 'wtd_entropy_ThermalConductivity', 'wtd_range_atomic_radius',
'wtd_std_atomic_radius', 'wtd_range_fie', 'wtd_entropy_ElectronAffinity',
'wtd_std_ThermalConductivity', 'wtd_entropy_Density', 'wtd_range_atomic_mass', 'wtd_range_Valence',
'wtd_entropy_FusionHeat', 'wtd_std_Valence', 'wtd_gmean_fie', 'wtd_entropy_Valence',
'wtd_entropy_atomic_radius', 'wtd_entropy_fie', 'wtd_mean_Density', 'wtd_mean_fie',
'wtd_gmean_ElectronAffinity', 'wtd_gmean_ThermalConductivity', 'wtd_range_ElectronAffinity',
'wtd_std_ElectronAffinity', 'wtd_mean_atomic_radius', 'wtd_std_Density', 'wtd_mean_ElectronAffinity',
'wtd_std_fie', 'wtd_mean_ThermalConductivity', 'wtd_gmean_Density', 'wtd_gmean_FusionHeat',
'wtd_std_atomic_mass', 'wtd_mean_atomic_mass', 'wtd_mean_FusionHeat', 'wtd_mean_Valence',
'wtd_gmean_atomic_radius', 'wtd_std_FusionHeat', 'wtd_gmean_Valence', 'wtd_gmean_atomic_mass',
'wtd_range_Density', 'wtd_range_FusionHeat', 'wtd_range_ThermalConductivity', 'mean_ThermalConductivity',
'std_atomic_radius', 'mean_Density', 'mean_fie', 'mean_atomic_mass', 'gmean_fie',
'entropy_ThermalConductivity', 'mean_atomic_radius', 'std_atomic_mass', 'entropy_FusionHeat',
'mean_FusionHeat', 'entropy_atomic_mass', 'entropy_ElectronAffinity', 'std_ThermalConductivity',
'entropy_Density', 'std_Density', 'gmean_Density', 'gmean_ThermalConductivity', 'gmean_atomic_mass',
'std_Valence', 'entropy_atomic_radius', 'gmean_FusionHeat', 'std_FusionHeat', 'std_ElectronAffinity',
'gmean_ElectronAffinity', 'std_fie', 'mean_ElectronAffinity', 'entropy_fie', 'gmean_atomic_radius',
'range_atomic_mass', 'range_atomic_radius', 'range_fie', 'range_ThermalConductivity', 'entropy_Valence',
'range_FusionHeat', 'range_ElectronAffinity', 'gmean_Valence', 'range_Density', 'mean_Valence',
'range_Valence', 'number_of_elements']

#Load the dataset
data_file = pd.read_csv(r'C:\rbi_reg_cs_176\venv\train.csv')



#Create a heatmap of the correlations between the features
sns.set(font_scale=0.65)
corr = data_file[features].corr()
plt.figure(figsize=(20, 20))
sns.heatmap(corr, cmap='coolwarm', cbar=True)
plt.show()
