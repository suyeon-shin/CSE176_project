import lightgbm as lgb
import pandas as pd
from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Load the breast cancer dataset
data_file = pd.read_csv(r'C:\rbi_reg_cs_176\venv\train.csv')

y = data_file['critical_temp']

X = data_file.drop('critical_temp', axis=1)
print(data_file)


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
print(f"X_train shape: {X_train.shape}")
print(f"X_test shape: {X_test.shape}")
print(f"y_train shape: {y_train.shape}")
print(f"y_test shape: {y_test.shape}")

# Convert the data to LightGBM format
train_data = lgb.Dataset(X_train, label=y_train)

# Set the hyperparameters for the LightGBM model
params = {
    'objective': 'regression',
    'metric': 'rmse',
    'num_leaves': 33,#31
    'learning_rate': 0.05,
}

# Train the LightGBM model
num_rounds = 2000 # best result so far

print(f"X_train shape: {X_train.shape}")
print(f"X_test shape: {X_test.shape}")
print(f"y_train shape: {y_train.shape}")
print(f"y_test shape: {y_test.shape}")

model = lgb.train(params, train_data, num_rounds, valid_sets=[train_data], early_stopping_rounds=10)

# Evaluate the model on the test set
y_pred = model.predict(X_test)
accuracy = mean_squared_error(y_test, y_pred, squared=False)
print(f'Test accuracy: {accuracy}')
